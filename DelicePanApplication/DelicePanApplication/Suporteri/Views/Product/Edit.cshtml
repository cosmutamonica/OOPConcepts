@model Suporteri.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Site.css" rel="stylesheet" />
@{var showList = new List<SelectListItem>
    {
          new SelectListItem { Text = "Da", Value="True" },
          new SelectListItem { Text = "Nu", Value="False" }         
    };
}
@{var category = new List<SelectListItem>
    {
          new SelectListItem { Text = "Pret/Bucata", Value="buc." },
          new SelectListItem { Text = "Pret/Kilogram", Value="Kg" }
    };
}
<h2>Editeaza inregistrarea</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="left">
            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Category, category, "-- Categorie --", new { @class = "dropdownwidth" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Show, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Show, showList, "-- Produs disponibil --", new { @class = "dropdownwidth" })
                </div>
            </div>
        </div>
        <div class="right">
            <img src=@Html.DisplayFor(model => model.ImagePath) />
        </div>
        <div class="form-group">
            <fieldset>
                <legend>Imagine</legend>
                <div class="editor-label col-md-offset-2  col-md-10">
                    @Html.LabelFor(model => model.ImagePath)
                </div>
                <div class="editor-field col-md-offset-2  col-md-10">
                    <input id="ImagePath" title="Incarca o imagine"
                           type="file" name="file" />
                </div>
            </fieldset>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AllProducts")
</div>
